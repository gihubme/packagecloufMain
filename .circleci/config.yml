# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  build-and-run-it-tests:
    # These next lines define a Docker executor: https://circleci.com/docs/2.0/executor-types/
    # You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # Be sure to update the Docker image tag below to openjdk version of your application.
    # A list of available CircleCI Docker Convenience Images are available here: https://circleci.com/developer/images/image/cimg/openjdk
    docker:
      - image: cimg/openjdk:11.0

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
#      - run:curl -s https://packagecloud.io/install/repositories/nikakar/mvnrelease/script.deb.sh | sudo bash

      # Checkout the code as the first step.
      - checkout

      # 1. Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # Use mvn clean and package as the standard maven build phase
            - run:
                name: Build
                command: mvn -B -DskipTests clean package

      # 2. Then run your tests!
      - run:
          name: IntegrationTest
          command: mvn integration-test
      - run:
          name: Test
          command: mvn test

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  version: 2
  run-it-tests: # This is the name of the workflow, feel free to change it to better match your workflow.
    jobs: # Inside the workflow, you define the jobs you want to run.
      - build-and-run-it-tests:
#          context:
#            - PCLOUD
          filters:
            branches:
              only:
                - main
                - /feature.*/
